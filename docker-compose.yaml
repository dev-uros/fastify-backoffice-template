services:
  db:
    container_name: ${DB_CONTAINER_NAME}
    image: 'postgres:15-alpine'
    working_dir: /src
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '7604:5432'
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - appointment-manager-api-db:/var/lib/postgresql/data
  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:latest
    command: ["redis-server", "--maxmemory-policy", "noeviction"]
    ports:
      - "6379:6379" # Map container port 6379 to host port 6379
    volumes:
      - redis-data:/data # Persist Redis data to a volume
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD} # Optional: Add password for Redis security
  fastify:
    container_name: ${WEBSERVER_CONTAINER_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Map container port 3000 to host port 3000
    volumes:
      - ./src:/src # Mount project directory for live updates
#      - /src/node_modules # Exclude node_modules to avoid conflicts
    command: /bin/sh -c "npm install && npm run dev"
    #    environment:
#      NODE_ENV: development
volumes:
    appointment-manager-api-db:
      driver: local
    redis-data:
      driver: local